<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<!DOCTYPE project [
    <!ENTITY appname "Autograder">
    <!ENTITY gwtmodule "edu.clarkson.autograder.Autograder">
    <!ENTITY ivyversion "2.4.0">
]>
<project name="&appname;" default="build" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Convert appname to lowercase -->
  <scriptdef language="javascript" name="lower">
    <attribute name="string" /> 
    <attribute name="to" />
    project.setProperty( attributes.get( "to" ), attributes.get( "string" ).toLowerCase() );
  </scriptdef>
  <lower string="&appname;" to="lowerappname" />

  <!-- Arguments to gwtc target -->
  <property name="gwt.args" value="-logLevel INFO  -style OBFUSCATED" />

  <!-- Configure Ivy -->
  <property name="ivy.install.version" value="&ivyversion;"/>
  <property name="ivy.dir" value="${basedir}/ivy"/>
  <property name="ivy.jar" value="${ivy.dir}/ivy.jar"/>
  <available file="${ivy.jar}" property="ivy.exists" />
  
  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
	<fileset dir="${ivy.dir}/runtime" includes="**/*.jar" erroronmissingdir="false"/>
    <fileset dir="${ivy.dir}/sdk" includes="**/*.jar"/>
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <target name="download-ivy" unless="ivy.exists">
    <mkdir dir="${ivy.dir}"/>

    <echo message="installing ivy..."/>
    <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
        dest="${ivy.jar}" usetimestamp="true"/>
  </target>
  
  <target name="init-ivy" depends="download-ivy">
    <path id="ivy.lib.path">
      <pathelement location="${ivy.jar}"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
        uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>
  
  <target name="resolve" depends="init-ivy" description="retreive dependencies with ivy">
	<ivy:resolve />
	<ivy:retrieve pattern="${ivy.dir}/[conf]/[artifact]-[revision](-[classifier]).[ext]" />
  </target>

  <target name="libs" depends="resolve" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" >
      <fileset dir="${ivy.dir}/runtime" includes="**/*.jar"/>
    </copy>
  </target>

  <target name="javac" depends="libs" description="Compile java source to bytecode">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.7" target="1.7" nowarn="true"
    	fork="yes"
    	includeantruntime="false"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler" maxmemory="512m">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="&gwtmodule;"/>
    </java>
  </target>
	
  <target name="custom-package" depends="gwtc" description="Custom library and jar packaging (final build step)">
    <jar jarfile="war/WEB-INF/lib/gwt-cache-filter.jar">
      <fileset dir="war/WEB-INF/classes/edu/clarkson/autograder/client/validator">
        <include name="GWTCacheControlFilter.class"/>
      </fileset>
    </jar>
  </target>

  <target name="build" depends="custom-package" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
	<!-- GWT Eclipse Plugin requires gwt-servlet.jar, but the app will never need it -->
  	<!-- (if the app needs the jar Ivy can download it, but it will be under a different name) -->
  	<zip destfile="${lowerappname}.war">
    	<zipfileset dir="war">
    		<exclude name="WEB-INF/lib/gwt-servlet.jar"/>
    	</zipfileset>
	</zip>
  </target>
  
  <target name="clean" description="Cleans this project">
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/WEB-INF/deploy" failonerror="false" includeemptydirs="true" />
    <delete>
    	<!-- GWT Eclipse Plugin requires gwt-servlet.jar -->
    	<fileset dir="war/WEB-INF/lib/">
    		<exclude name="gwt-servlet.jar"/>
    	</fileset>
    </delete>
    <delete dir="war/${lowerappname}" failonerror="false" />
  </target>
  
  <target name="clean-ivy" description="clean the ivy installation">
    <delete includeemptydirs="true">
    	<fileset dir="${ivy.dir}">
    		<exclude name="ivy.jar"/>
    	</fileset>
    </delete>
  </target>
  
  <target name="clean-all" depends="clean,clean-ivy"/>

</project>
